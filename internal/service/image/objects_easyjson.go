// Code generated by easyjson for marshaling/unmarshaling. DO NOT EDIT.

package image

import (
	json "encoding/json"
	easyjson "github.com/mailru/easyjson"
	jlexer "github.com/mailru/easyjson/jlexer"
	jwriter "github.com/mailru/easyjson/jwriter"
)

// suppress unused package warning
var (
	_ *json.RawMessage
	_ *jlexer.Lexer
	_ *jwriter.Writer
	_ easyjson.Marshaler
)

func easyjsonCce3d1beDecodeImageOptimizationApiInternalServiceImage(in *jlexer.Lexer, out *UploadImageResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonCce3d1beEncodeImageOptimizationApiInternalServiceImage(out *jwriter.Writer, in UploadImageResponse) {
	out.RawByte('{')
	first := true
	_ = first
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v UploadImageResponse) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonCce3d1beEncodeImageOptimizationApiInternalServiceImage(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v UploadImageResponse) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonCce3d1beEncodeImageOptimizationApiInternalServiceImage(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *UploadImageResponse) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonCce3d1beDecodeImageOptimizationApiInternalServiceImage(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *UploadImageResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonCce3d1beDecodeImageOptimizationApiInternalServiceImage(l, v)
}
func easyjsonCce3d1beDecodeImageOptimizationApiInternalServiceImage1(in *jlexer.Lexer, out *UploadImageRequest) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonCce3d1beEncodeImageOptimizationApiInternalServiceImage1(out *jwriter.Writer, in UploadImageRequest) {
	out.RawByte('{')
	first := true
	_ = first
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v UploadImageRequest) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonCce3d1beEncodeImageOptimizationApiInternalServiceImage1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v UploadImageRequest) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonCce3d1beEncodeImageOptimizationApiInternalServiceImage1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *UploadImageRequest) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonCce3d1beDecodeImageOptimizationApiInternalServiceImage1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *UploadImageRequest) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonCce3d1beDecodeImageOptimizationApiInternalServiceImage1(l, v)
}
func easyjsonCce3d1beDecodeImageOptimizationApiInternalServiceImage2(in *jlexer.Lexer, out *ListImageResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonCce3d1beEncodeImageOptimizationApiInternalServiceImage2(out *jwriter.Writer, in ListImageResponse) {
	out.RawByte('{')
	first := true
	_ = first
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ListImageResponse) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonCce3d1beEncodeImageOptimizationApiInternalServiceImage2(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ListImageResponse) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonCce3d1beEncodeImageOptimizationApiInternalServiceImage2(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ListImageResponse) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonCce3d1beDecodeImageOptimizationApiInternalServiceImage2(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ListImageResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonCce3d1beDecodeImageOptimizationApiInternalServiceImage2(l, v)
}
func easyjsonCce3d1beDecodeImageOptimizationApiInternalServiceImage3(in *jlexer.Lexer, out *ListImageRequest) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonCce3d1beEncodeImageOptimizationApiInternalServiceImage3(out *jwriter.Writer, in ListImageRequest) {
	out.RawByte('{')
	first := true
	_ = first
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ListImageRequest) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonCce3d1beEncodeImageOptimizationApiInternalServiceImage3(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ListImageRequest) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonCce3d1beEncodeImageOptimizationApiInternalServiceImage3(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ListImageRequest) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonCce3d1beDecodeImageOptimizationApiInternalServiceImage3(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ListImageRequest) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonCce3d1beDecodeImageOptimizationApiInternalServiceImage3(l, v)
}
func easyjsonCce3d1beDecodeImageOptimizationApiInternalServiceImage4(in *jlexer.Lexer, out *GetImageResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonCce3d1beEncodeImageOptimizationApiInternalServiceImage4(out *jwriter.Writer, in GetImageResponse) {
	out.RawByte('{')
	first := true
	_ = first
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v GetImageResponse) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonCce3d1beEncodeImageOptimizationApiInternalServiceImage4(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v GetImageResponse) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonCce3d1beEncodeImageOptimizationApiInternalServiceImage4(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *GetImageResponse) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonCce3d1beDecodeImageOptimizationApiInternalServiceImage4(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *GetImageResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonCce3d1beDecodeImageOptimizationApiInternalServiceImage4(l, v)
}
func easyjsonCce3d1beDecodeImageOptimizationApiInternalServiceImage5(in *jlexer.Lexer, out *GetImageRequest) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "ListingId":
			out.ListingId = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonCce3d1beEncodeImageOptimizationApiInternalServiceImage5(out *jwriter.Writer, in GetImageRequest) {
	out.RawByte('{')
	first := true
	_ = first
	if in.ListingId != "" {
		const prefix string = ",\"ListingId\":"
		first = false
		out.RawString(prefix[1:])
		out.String(string(in.ListingId))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v GetImageRequest) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonCce3d1beEncodeImageOptimizationApiInternalServiceImage5(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v GetImageRequest) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonCce3d1beEncodeImageOptimizationApiInternalServiceImage5(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *GetImageRequest) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonCce3d1beDecodeImageOptimizationApiInternalServiceImage5(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *GetImageRequest) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonCce3d1beDecodeImageOptimizationApiInternalServiceImage5(l, v)
}
